

from keras.applications.resnet50 import ResNet50
from keras.applications.resnet50 import preprocess_input, decode_predictions
import cv2
import numpy as np
import subprocess
import sys
import threading

class  MyThread(threading.Thread):
          def __int__(self):
              threading.Thread.__init__(self)

          def run(self):
                  global label
                  print("[INFO] Loading network")
                  self.model = ResNet50(weights="imagenet")

                  while (~(frame is None)):
                          (inID, label) = self.predict(frame)

          def predict(self, frame):
                  image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB).astype(np.float32)
                  image = image.reshape((1,) + image.shape)

                  image = preprocess_input(image)
                  preds = self.model.predict(image)
                  return decode_predictions(preds, top=1)[0]

cap = cv2.VideoCapture(0)
if (cap.isOpened()):
        print("camera is ok")
else:
        cap.open()

keras_thread = MyThread()
keras_thread.start()

'''fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('/Users/chen/Desktop/output.avi', fourcc, 20.0, (224,224))'''

while (True):

    ret, original =cap.read(0)
    frame = cv2.resize(original, (224,224))

    #label = decode_predictions(preds,top=1)[0]
    cv2.putText(original, "Label: {}".format(label), (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0,255,0), 2)
    #out.write(original)

    cv2.imshow("Classification", original)

    if (cv2.waitKey(1) & 0xFF == ord('q')):\
        break

cap.release()
frame = None
#out.release()
cv2.destroyAllWindows()
sys.exit()



